# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  memberNumber: Float!
  name: String!
  birthday: DateTime!
  sex: SexType!
  accountId: String!
  password: String!
  email: String!
  roles: [UserRole!]!
  children: [Child!]
  parentDescription: String
  sitterDescription: String
  careRange: [CareRange!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum SexType {
  MALE
  FEMALE
}

enum UserRole {
  PARENT
  SITTER
}

enum CareRange {
  INFANT
  CHILD
  SCHOOL
}

type Child {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  birthday: DateTime!
  sex: SexType!
  parent: User!
}

type AddParentRoleOutput {
  error: String
  isSucceeded: Boolean!
}

type ChangePasswordOutput {
  error: String
  isSucceeded: Boolean!
}

type UpdateProfileOutput {
  error: String
  isSucceeded: Boolean!
}

type UserProfileOutput {
  error: String
  isSucceeded: Boolean!
  user: User
}

type LoginOutput {
  error: String
  isSucceeded: Boolean!
  token: String
}

type CreateAccountOutput {
  error: String
  isSucceeded: Boolean!
}

type Query {
  me: User!
  userProfile(userId: Float!): UserProfileOutput!
}

type Mutation {
  createAccount(input: CreateAccountInput!): CreateAccountOutput!
  login(input: LoginInput!): LoginOutput!
  updateProfile(input: UpdateProfileInput!): UpdateProfileOutput!
  changePassword(input: ChangePasswordInput!): ChangePasswordOutput!
  addParentRole(input: AddParentRoleInput!): AddParentRoleOutput!
}

input CreateAccountInput {
  name: String!
  birthday: DateTime!
  sex: SexType!
  accountId: String!
  password: String!
  email: String!
  roles: [UserRole!]!
}

input LoginInput {
  accountId: String!
  password: String!
}

input UpdateProfileInput {
  name: String
  email: String
  children: [chlidEntity!]
  parentDescription: String
  sitterDescription: String
  careRange: [CareRange!]
}

input chlidEntity {
  birthday: DateTime!
  sex: SexType!
  parent: UserEntity!
}

input UserEntity {
  memberNumber: Float!
  name: String!
  birthday: DateTime!
  sex: SexType!
  accountId: String!
  password: String!
  email: String!
  roles: [UserRole!]!
  children: [chlidEntity!]
  parentDescription: String
  sitterDescription: String
  careRange: [CareRange!]!
}

input ChangePasswordInput {
  password: String!
}

input AddParentRoleInput {
  children: [chlidEntity!]
  parentDescription: String
}
